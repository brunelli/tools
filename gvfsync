#!/bin/bash
#
# gvfsync - Sync files between a GVFS mount and a local directory

declare -r CONFIG="$HOME/.config/gvfsyncrc"
declare -a REQUIRES=(gio rsync)

get_gvfs_path() {
    [[ $(gio info "$1" 2> /dev/null) ]] ||
    {
        echo ':: Mounting filesystem' >&2
        gio mount "$1" >&2 ||
        {
            echo 'Failed to mount filesystem' >&2
            return 4
        }
    }

    local GVFS_DIR=$(awk -v type='gvfsd-fuse' '$1==type {printf $2; exit}' /proc/mounts)
    GVFS_DIR+=$(gio info "$1" | awk '{for (I=1;I<=NF;I++) if ($I == "id::filesystem:") {print "/"$(I+1); exit}}')
    [[ -n "$GVFS_DIR" ]] && printf "${GVFS_DIR}${2}" || return 5
}

for CMD in "${REQUIRES[@]}"
do
    command -v "$CMD" > /dev/null ||
    {
        echo "Missing required command: ${CMD}" >&2
        exit 2
    }
done

case "$1" in
    pull|push)
        source "$CONFIG" 2> /dev/null ||
        {
            echo "Failed to source config file '$CONFIG'." >&2
            exit 3
        }
        shift
        ;;&
    pull)
        SOURCE=$(get_gvfs_path "$URI" "$REMOTE_PATH") || exit $?
        DESTIN="$LOCAL_PATH"
        echo ':: Updating local copy'
        ;;
    push)
        SOURCE="$LOCAL_PATH"
        DESTIN=$(get_gvfs_path "$URI" "$REMOTE_PATH") || exit $?
        echo ':: Updating remote copy'
        ;;
    '')
        echo "USAGE: $(basename "$0") COMMAND [RSYNC_ARGS...]"
        exit 1
        ;;
    *)
        echo 'Illegal command.' >&2
        exit 1
        ;;
esac

rsync --verbose --human-readable --recursive --partial --progress --update ${@} "$SOURCE" "$DESTIN"
